<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="shortcut icon" href="/assets/_pic/favicon.png">
  <link rel="stylesheet" href="{{ url('css/styles.css') }}">

  <title>{{ siteName }}</title>

  <meta name="description" content="{{ infos.SEO_snippet }}">
</head>

<body id="projects">

    <header>
      <h1>{{ currentSite.name }}
      <br>{{ infos.claim }}</h1>
      <p><a href="tel:{{ infos.phone|replace({' ': ''}) }}">{{ infos.phone }}</a></p>
      <p><a href="mailto:{{ infos.mail }}">contact</a></p>
    </header>

    {% set projects = craft.entries.section('projects') %}
    {% if projects %}
    <main class="project-list">
    {% for project in projects %}
    {% set type = project.type %}
    {% set slug = project.slug %}
    <article class="project {{ type }} {{ slug }}"> {# hier noch type und slug in die class #}
<!-- Kommentar aus vue-Zeiten:
    Die Eintragstypen "einzel-" und "doppelbild" sind gleich strukturiert.
    D.h. im Backend können max. 2 Bilder eingesetzt werden. Im Frontend werden
    aber nur im zweiten Fall zwei Bilder gezeigt. Ein ev. vorhandenes 2. Bild
    im Eintragstyp "einzelbild" wird ignoriert.

    Zur Anzeige eines Einzelbildes ist eine spezielle komponente nötig, die
    in der Lage ist, den img-Tag durch ein Hintergrundbild zu ersetzen.
    Sonst wären die Höhen von Einzel- und Doppelbildern meist uneinheitlich.

    Anm. 12.3.2024: es gab die komponenten
    - BackgroundImage
    - ProjectImage
    - ProjectVideo
    siehe unten
  -->
    {% if type == "einzelbild" %}
      {% set image = project.images[0] %}
      <img class="project-image" src="{{ image.getUrl('small') }}" alt="Mathias Renner, {{ image.title }}" draggable="false" ondragstart="return flase;" />
    {% elseif type == "doppelbild" %}

      {% for image in project.images %}
      <img class="double project-image" src="{{image.getUrl('small')}}" alt="Mathias Renner, {{image.title}}" draggable="false" ondragstart="return flase;" />
      {% endfor %}
    {% else %}
    <p>video</p>
    {% endif %}
    <p class="project-title">{{ project.title}}</p>
    </article>

    {% endfor %}
    </main>
    {% else %}
    <p>There are no projects available at this moment.</p>
    {% endif %}

    <footer>
      <p><a href="#projects">back to top</a></p>
    </footer>
</body>
</html>

<!--
   <BackgroundImage
      v-if="type == 'einzelbild'"
      class="single"
      :img-url="images[0].url"
      :alt-text="`Mathias Renner, ${title}`" />
      Und das war die Komponente dazu:
        <figure :style="`background-image: url(${imgUrl});`" >
          <img
            draggable="false"
            ondragstart="return false;"
            class="project-image"
            :src="imgUrl"
            :alt="altText">
        </figure>

    <ProjectImage
      v-if="type == 'doppelbild'"
      v-for="image in images"
      :key="image.id"
      class="double"
      :img-url="image.url"
      :alt-text="`Mathias Renner, ${title}`" />
      Und das war die Komponente dazu:
       <img
        draggable="false"
        ondragstart="return false;"
        class="project-image"
        :src="imgUrl"
        :alt="altText">

    <ProjectVideo
      v-if="type == 'video'"
      :vimeoId="vimeoId" />
      \<\!-- vorderhand obsolet: :video-src="videos[0].url" \-\->
      Und das war die Komponente dazu:
       <img
        draggable="false"
        ondragstart="return false;"
        class="project-image"
        :src="imgUrl"
        :alt="altText">
          Und dies war auskommentiert:
          <video autoplay playsinline muted loop :src="videoSrc">
          </video>
          Weil "vueVimeoPlayer" verwendet wurde, offenbar ein npm modul
    -->
